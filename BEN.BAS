/*
<A Dangerous Dave style program. Incomplete>

Copyright (C) <2014>  <Navin Ipe>
Contact: navinipe at gmail dot com

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
 
 SCREEN 12: CLS '***when Ben gets stuck on a pillar, keep pressing the jumping key & you will see him moving thru the pillar by 'osmosis'
 DIM LEVEL(12, 132)
 DIM MAN1(40, 40), MAN2(40, 40), MAN3(40, 40), MANJ(40, 40)
 DIM MAN1I(40, 40), MAN2I(40, 40), MAN3I(40, 40), MANJI(40, 40)
 DIM BULLET(20, 20), BULLETI(20, 20), VIRUS(40, 40)
 R = 0: C = 0: T = 0: COL = 0
30 FOR I = 1 TO 68
 READ N$: R = R + 1: C = COL
 FOR J = 1 TO LEN(N$)
 A = VAL(MID$(N$, J, 2)): B = VAL(MID$(N$, J + 2, 2)): J = J + 3
 FOR K = 1 TO A
 C = C + 1
 PSET (C, R), B
 NEXT: NEXT: NEXT
 T = T + 1
 IF T = 1 THEN R = 0: COL = 50: GOTO 30
 IF T = 2 THEN R = 0: COL = 100: GOTO 30
 IF T = 3 THEN R = 0: COL = 150: GOTO 30

'-------------------------------------INVERSION
 R = 100: COL = 0: RESTORE

132 FOR I = 1 TO 68
 READ N$: R = R + 1: C = COL
 FOR J = LEN(N$) TO 1 STEP -1
 A = VAL(MID$(N$, J - 3, 2)): B = VAL(MID$(N$, J - 1, 2)): J = J - 3
 FOR K = 1 TO A
 C = C + 1
 PSET (C, R), B
 NEXT: NEXT: NEXT
 T = T + 1
 IF T = 5 THEN R = 100: COL = 50: GOTO 132
 IF T = 6 THEN R = 100: COL = 100: GOTO 132
 IF T = 7 THEN R = 100: COL = 150: GOTO 132
 IF T = 8 THEN R = 100: COL = 200: GOTO 132

'-------------------------------------------------------GET&PUT
GET (1, 1)-(38, 68), MAN1: PUT (1, 1), MAN1, XOR
GET (50, 1)-(88, 68), MAN2: PUT (50, 1), MAN2, XOR
GET (100, 1)-(138, 68), MAN3: PUT (100, 1), MAN3, XOR
GET (150, 1)-(188, 68), MANJ: PUT (150, 1), MANJ, XOR

GET (1, 101)-(38, 168), MAN1I: PUT (1, 100), MAN1I, XOR
GET (50, 101)-(88, 168), MAN2I: PUT (50, 100), MAN2I, XOR
GET (100, 101)-(138, 168), MAN3I: PUT (100, 100), MAN3I, XOR
GET (150, 101)-(188, 168), MANJI: PUT (150, 100), MANJI, XOR
GET (200, 101)-(238, 168), VIRUS: PUT (200, 100), VIRUS, XOR
DRAW "BM0,0 C14 R5 F2 E2 R10 F5 G5 L10 H2 G2 L5 U10": PAINT (1, 1), 14: GET (0, 0)-(25, 10), BULLET: CLS
DRAW "BM25,15 C14 L5 H2 G2 L10 H5 E5 R10 F2 E2 R5 D10": PAINT (10, 10), 14: GET (0, 5)-(25, 25), BULLETI

LIM = 395: COL = 11        '***COL IS A 2 DIGIT #. DIGIT 1 TELLS THAT WE ARE @LEVEL 1. THE SECOND DIGIT TELLS THAT WE ARE @ THE FIRST SCREEN
'------------------------------------------------------------

'-----LEVEL READING
READ N$ '***DONT REMOVE THIS. IT READS AN UNNECESSARY LINE & PREVENTS AN ERROR
FOR I = 1 TO 12
READ N$
FOR J = 1 TO LEN(N$) '***LEN(N$) IS 132
LEVEL(I, J) = VAL(MID$(N$, J, 1))
NEXT: NEXT
GOSUB 1300

'----------------------------------------
R = 327: C = 300: NR = R: NC = C: DIR = 2: PMT = 2: NDIR = 2: NMT = 0
PUT (NC, NR), MAN1, XOR

START:
WHILE X$ <> CHR$(27)
 Z$ = INKEY$
  IF Z$ = CHR$(0) + CHR$(75) OR Z$ = CHR$(0) + CHR$(77) THEN GOTO JORNOT
  IF Z$ = CHR$(0) + CHR$(72) THEN STRTUP = 1: GOTO JUMP
  IF Z$ = "Z" OR Z$ = "z" THEN STRTUP = 0: NDIR = 1: GOTO JUMP
  IF Z$ = "X" OR Z$ = "x" THEN STRTUP = 0: NDIR = 2: GOTO JUMP
  IF Z$ = CHR$(32) OR SHOOTING = 1 THEN SHOOTING = 1: GOSUB SHOOT
WEND

JORNOT:
WHILE X$ <> CHR$(27)
 Y$ = INKEY$
  IF Z$ = CHR$(0) + CHR$(77) AND Y$ = CHR$(0) + CHR$(72) OR Z$ = CHR$(0) + CHR$(72) AND Y$ = CHR$(0) + CHR$(77) THEN STRTUP = 0: NDIR = 2: GOTO JUMP
  IF Z$ = CHR$(0) + CHR$(75) AND Y$ = CHR$(0) + CHR$(72) OR Z$ = CHR$(0) + CHR$(75) AND Y$ = CHR$(0) + CHR$(72) THEN STRTUP = 0: NDIR = 1: GOTO JUMP
  IF Y$ = CHR$(0) + CHR$(75) OR Y$ = CHR$(0) + CHR$(77) THEN GOTO WALK
  IF Y$ = "Z" OR Y$ = "z" THEN STRTUP = 0: NDIR = 1: GOTO JUMP
  IF Y$ = "X" OR Y$ = "x" THEN STRTUP = 0: NDIR = 2: GOTO JUMP
  IF Y$ = CHR$(32) OR SHOOTING = 1 THEN SHOOTING = 1: GOSUB SHOOT
  IF Y$ = CHR$(9) THEN GOSUB 10000
WEND

WALK:
IF Y$ = CHR$(0) + CHR$(75) THEN NDIR = 1: NC = NC - 15
IF Y$ = CHR$(0) + CHR$(77) THEN NDIR = 2: NC = NC + 15
BCM = 1: GOSUB 800: IF RFLC = 1 THEN RFLC = 0: GOTO 530
IF PMT = 2 AND NMT = 0 THEN PMT = 0: NMT = 1: GOTO 520
IF PMT = 0 AND NMT = 1 THEN PMT = 1: NMT = 0: GOTO 520
IF PMT = 1 AND NMT = 0 THEN PMT = 0: NMT = 2: GOTO 520
IF PMT = 0 AND NMT = 2 THEN PMT = 2: NMT = 0



520 IF DIR = 2 AND PMT = 0 THEN PUT (C, R), MAN1, XOR: GOTO 530
    IF DIR = 1 AND PMT = 0 THEN PUT (C, R), MAN1I, XOR: GOTO 530
    IF DIR = 2 AND PMT = 1 THEN PUT (C, R), MAN2, XOR: GOTO 530
    IF DIR = 2 AND PMT = 2 THEN PUT (C, R), MAN3, XOR: GOTO 530
    IF DIR = 1 AND PMT = 1 THEN PUT (C, R), MAN2I, XOR: GOTO 530
    IF DIR = 1 AND PMT = 2 THEN PUT (C, R), MAN3I, XOR: GOTO 530


530 IF NDIR = 2 AND NMT = 0 THEN PUT (NC, NR), MAN1, XOR: GOTO 540
    IF NDIR = 1 AND NMT = 0 THEN PUT (NC, NR), MAN1I, XOR: GOTO 540
    IF NDIR = 2 AND NMT = 1 THEN PUT (NC, NR), MAN2, XOR: GOTO 540
    IF NDIR = 2 AND NMT = 2 THEN PUT (NC, NR), MAN3, XOR: GOTO 540
    IF NDIR = 1 AND NMT = 1 THEN PUT (NC, NR), MAN2I, XOR: GOTO 540
    IF NDIR = 1 AND NMT = 2 THEN PUT (NC, NR), MAN3I, XOR: GOTO 540

540 T = TIMER + 0: WHILE T > TIMER: WEND
DIR = NDIR: C = NC: R = NR
GOSUB SHOOT
GOTO START




'------------------------------------------------------------------

JUMP:

LIM = NR - 154: DON = 0     '--*****DON IS FOR DOWN OR NOT
IF DIR = 2 AND NMT = 0 THEN PUT (NC, NR), MAN1, XOR: GOTO 544
IF DIR = 1 AND NMT = 0 THEN PUT (NC, NR), MAN1I, XOR: GOTO 544
IF DIR = 2 AND NMT = 1 THEN PUT (NC, NR), MAN2, XOR: GOTO 544
IF DIR = 2 AND NMT = 2 THEN PUT (NC, NR), MAN3, XOR: GOTO 544
IF DIR = 1 AND NMT = 1 THEN PUT (NC, NR), MAN2I, XOR: GOTO 544
IF DIR = 1 AND NMT = 2 THEN PUT (NC, NR), MAN3I, XOR: GOTO 544

544 IF NDIR = 2 THEN PUT (C, R), MANJ, XOR ELSE PUT (C, R), MANJI, XOR
DIR = NDIR
IF NDIR = 1 THEN X$ = CHR$(0) + CHR$(75) ELSE X$ = CHR$(0) + CHR$(77)

545 WHILE X$ <> CHR$(27)
 W$ = INKEY$
  IF NDIR = 1 AND W$ = CHR$(0) + CHR$(77) THEN DIR = 1: NDIR = 2: STRTUP = 3: GOTO FALL
  IF NDIR = 2 AND W$ = CHR$(0) + CHR$(75) THEN DIR = 2: NDIR = 1: STRTUP = 3: GOTO FALL
  IF W$ = CHR$(0) + CHR$(77) THEN NDIR = 2: DON = 0: STRTUP = 3: GOTO FALL
  IF W$ = CHR$(0) + CHR$(75) THEN NDIR = 1: DON = 0: STRTUP = 3: GOTO FALL
  IF W$ = CHR$(0) + CHR$(80) THEN STRTUP = 2: GOTO FALL
  IF W$ = CHR$(32) OR SHOOTING = 1 THEN SHOOTING = 1: GOSUB SHOOT
GOTO JUMPING
WEND

JUMPING:
IF STRTUP = 1 THEN DON = 1 ELSE 546
IF NR <= (LIM + 20) THEN NR = NR - 1: BCM = 2: GOSUB 800: GOTO 559 ELSE NR = NR - 2: BCM = 2: GOSUB 800: GOTO 559

546 IF NDIR = 1 THEN NR = NR - 2 ELSE 547
IF NR <= (LIM + 20) THEN NC = NC - 1: BCM = 3: GOSUB 800 ELSE NC = NC - 2: BCM = 3: GOSUB 800

547 IF NDIR = 2 THEN NR = NR - 2 ELSE 559
IF NR <= (LIM + 20) THEN NC = NC + 1: BCM = 3: GOSUB 800 ELSE NC = NC + 2: BCM = 3: GOSUB 800
559 IF NR < LIM THEN STRTUP = 0: GOTO FALL

IF RFLC = 1 THEN RFLC = 0: GOTO 560
    IF DIR = 1 THEN PUT (C, R), MANJI, XOR
    IF DIR = 2 THEN PUT (C, R), MANJ, XOR
560 IF NDIR = 1 THEN PUT (NC, NR), MANJI, XOR
IF NDIR = 2 THEN PUT (NC, NR), MANJ, XOR
561 T = TIMER + 0: WHILE T > TIMER: WEND
DIR = NDIR: C = NC: R = NR
GOTO 545
'-------------------------------------------------------------------





FALL:
LIM = (395 - 68)
569 IF STRTUP = 4 THEN STRTUP = 3: GOTO 570 ELSE GOTO 585          '***STRTUP=4 IS FOR WALKING & FALLING INTO A HOLE
570 IF DIR = 2 AND NMT = 0 THEN PUT (C, R), MAN1, XOR: GOTO 580
    IF DIR = 1 AND NMT = 0 THEN PUT (C, R), MAN1I, XOR: GOTO 580
    IF DIR = 2 AND NMT = 1 THEN PUT (C, R), MAN2, XOR: GOTO 580
    IF DIR = 2 AND NMT = 2 THEN PUT (C, R), MAN3, XOR: GOTO 580
    IF DIR = 1 AND NMT = 1 THEN PUT (C, R), MAN2I, XOR: GOTO 580
    IF DIR = 1 AND NMT = 2 THEN PUT (C, R), MAN3I, XOR: GOTO 580

580 IF DIR = 1 THEN PUT (C, R), MANJI, XOR
 IF DIR = 2 THEN PUT (C, R), MANJ, XOR

585 IF NDIR = 1 THEN X$ = CHR$(0) + CHR$(75) ELSE X$ = CHR$(0) + CHR$(77)
590 WHILE X$ <> CHR$(27)
      W$ = INKEY$
      IF NDIR = 1 AND W$ = CHR$(0) + CHR$(77) THEN DIR = 1: NDIR = 2: STRTUP = 3: GOTO FALLING
      IF NDIR = 2 AND W$ = CHR$(0) + CHR$(75) THEN DIR = 2: NDIR = 1: STRTUP = 3: GOTO FALLING
      IF W$ = CHR$(0) + CHR$(80) THEN STRTUP = 2: GOTO FALLING
      IF W$ = CHR$(32) OR SHOOTING = 1 THEN SHOOTING = 1: GOSUB SHOOT
      GOTO FALLING
    WEND

FALLING:
IF DON = 1 OR STRTUP = 2 OR STRTUP = 4 THEN BCM = 4: GOSUB 970: NR = NR + 2: GOTO 600
IF STRTUP = 3 AND NDIR = 1 THEN BCM = 5: GOSUB 970: NC = NC - 1: NR = NR + 2
IF STRTUP = 3 AND NDIR = 2 THEN BCM = 5: GOSUB 970: NC = NC + 1: NR = NR + 2
IF NDIR = 1 THEN NR = NR + 2: NC = NC - 2: BCM = 5: GOSUB 970
IF NDIR = 2 THEN NR = NR + 2: NC = NC + 2: BCM = 5: GOSUB 970
600 IF NR >= LIM THEN STRTUP = 0: GOTO FALLFINISH
 IF RFLC = 1 THEN RFLC = 0: GOTO 605
 IF DIR = 1 THEN PUT (C, R), MANJI, XOR
 IF DIR = 2 THEN PUT (C, R), MANJ, XOR
605 IF NDIR = 1 THEN PUT (NC, NR), MANJI, XOR
 IF NDIR = 2 THEN PUT (NC, NR), MANJ, XOR
610 T = TIMER + 0: WHILE T > TIMER: WEND
C = NC: R = NR: DIR = NDIR
GOTO 590

FALLFINISH:
IF NDIR = 1 THEN PUT (C, R), MANJI, XOR
IF NDIR = 2 THEN PUT (C, R), MANJ, XOR
IF NR > LIM THEN NR = R
IF NDIR = 1 THEN PUT (NC, NR), MAN1I, XOR
IF NDIR = 2 THEN PUT (NC, NR), MAN1, XOR
NMT = 0: PMT = 1: R = NR: C = NC: GOSUB SHOOT

GOTO START
'---------------------------------------------------------------------------


SHOOT:

    IF SHOOTING = 1 THEN 700 ELSE RETURN
700 IF SHOT = 1 THEN 710
    IF NDIR = 2 THEN BD = 2: SR = R + 34: SC = C + 38
    IF NDIR = 1 THEN BD = 1: SR = R + 34: SC = C
    NSC = SC
710 IF BD = 2 THEN NSC = NSC + 1 ELSE NSC = NSC - 1
    IF NSC >= 614 OR NSC <= 1 THEN SHOOTING = 0: SHOT = 0: GOTO 720
    

    IF SHOT = 0 THEN SHOT = 1: GOTO 730
720 IF BD = 1 THEN PUT (SC, SR), BULLETI, XOR ELSE PUT (SC, SR), BULLET, XOR
730 IF SHOT = 0 THEN 740
    IF BD = 1 THEN PUT (NSC, SR), BULLETI, XOR ELSE PUT (NSC, SR), BULLET, XOR
740 SC = NSC: RETURN





800 '------BLOCKAGE CHECKING MODULE (FOR JUMPING & WALKING)
803 GOSUB 1090
805 IF BCM = 2 OR BCM = 3 THEN 810 ELSE 850


'***----FOR STRAIGHT UP
810 FOR I = 1 TO 38
820 IF POINT(NC + I, NR) <> 0 THEN NR = R: STRTUP = 2: RETURN FALL
830 NEXT I
840 IF BCM = 3 THEN 910 ELSE RETURN

850 IF BCM = 1 THEN 855 ELSE 900


'***----FOR WALK
855 FOR I = 1 TO 15
860 FOR J = 1 TO 65
870 IF NDIR = 1 AND POINT(C - I, R + J) <> 0 THEN NC = C
880 IF NDIR = 2 AND POINT(C + I + 38, R + J) <> 0 THEN NC = C
890 NEXT: NEXT
895 IF POINT(C + 5, R + 69) = 0 AND POINT(C + 33, R + 69) = 0 THEN STRTUP = 4: DON = 1: RETURN FALL
900 RETURN


'***----FOR JUMP SIDE
910 FOR J = 1 TO 65
920 IF NDIR = 1 AND POINT(NC, NR + J) <> 0 THEN NC = C: STRTUP = 1: DON = 1: RETURN JUMPING
930 IF NDIR = 2 AND POINT(NC + 39, NR + J) <> 0 THEN NC = C: STRTUP = 1: DON = 1: RETURN JUMPING
940 NEXT
950 RETURN





970 '-----BLOCKAGE CHECKING MODULE FOR FALLING
975 GOSUB 1090
980 IF BCM = 4 OR BCM = 5 THEN 990


'***----FOR FALL STRAIGHT
990 FOR I = 1 TO 38
1010 IF POINT(NC + I, NR + 67) <> 0 THEN NR = R: DON = 0: LIM = NR - 67: RETURN
1020 NEXT I
1030 IF BCM = 5 THEN 1040 ELSE RETURN


'***----FOR FALL SIDE
1040 FOR J = 1 TO 65
1050 IF NDIR = 1 AND POINT(NC, NR + J) <> 0 THEN NR = R: STRTUP = 2: RETURN FALLING
1060 IF NDIR = 2 AND POINT(NC + 39, NR + J) <> 0 THEN NR = R: STRTUP = 2: RETURN FALLING
1070 NEXT
1080 RETURN



1090 '---MODULE TO CHECK FOR OUT OF SCREEN MOVEMENTS
1100 IF NC >= 601 THEN COL = VAL(LEFT$(STR$(COL), 1) + STR$(VAL(RIGHT$(STR$(COL), 1)) + 1)): NC = 0: C = 0: RFLC = 1 ELSE 1110
RETURN 1300    '***RFLC is for returned from level check

1110 IF NC <= 0 THEN COL = VAL(LEFT$(STR$(COL), 1) + STR$(VAL(RIGHT$(STR$(COL), 1)) - 1)): NC = 601: C = 601: RFLC = 1 ELSE 1120
RETURN 1300

1120 RETURN




'***LIM IS TO BE SPECIFIED FOR EACH LEVEL
    '----------------------------------------
    '---------level printing
    '----------------------------------------
1300 CLS
K = 65: CO = 0
FOR I = 1 TO 12
FOR J = (VAL(RIGHT$(STR$(COL), 1)) * 22) - 21 TO (VAL(RIGHT$(STR$(COL), 1)) * 22)
A = LEVEL(I, J)
IF A = 0 THEN LINE (CO, K)-(CO + 30, K + 40), 0, BF
IF A = 1 THEN LINE (CO, K)-(CO + 30, K + 40), 4, BF
IF A = 2 THEN LINE (CO, K)-(CO + 30, K + 40), 7, BF
IF A = 3 THEN LINE (CO, K)-(CO + 30, K + 40), 6, BF
CO = CO + 30
NEXT J
K = K + 30: CO = 0
NEXT I

LINE (0, 420)-(640, 425), 10, BF
LINE (0, 60)-(640, 64), 10, BF
RFLC = 1 '***this shouldn't be 1 when a level is started
RETURN


'----------------------RELAXED POSITION
DATA 060020041200
DATA 060020041200
DATA 060020041200
DATA 060020041200
DATA 06003204
DATA 06003204
DATA 06003204
DATA 0600100601150112011501120401011501121200
DATA 0600100601120115011201150401011201151200
DATA 0600100601150112011501120401011501121200
DATA 0600100601120115011201150401011201151200
DATA 060004060115011201150112020601150112011501120115011201150112011501121200
DATA 060004060112011501120115020601120115011201150112011501120115011201151200
DATA 060004060115011201150112020601150112011501120115011201150112011501121200
DATA 060004060112011501120115020601120115011201150112011501120115011201151200
DATA 10000115011201150112020601150112011501120115011201150112011501120115011201150112011501120600
DATA 10000112011501120115020601120115011201150112011501120115011201150112011501120115011201150600
DATA 1000011501120115011201150112011501120115011201150112011501121400
DATA 1000011201150112011501120115011201150112011501120115011201151400
DATA 1000011501120115011201150112011501120115011201150112011501121400
DATA 1000011201150112011501120115011201150112011501120115011201151400
DATA 1000011501120115011201150112011501120115011201150112011501121400
DATA 1000011201150112011501120115011201150112011501120115011201151400
DATA 120010151600
DATA 120010151600
DATA 120010151600
DATA 120010151600
DATA 060018151400
DATA 060018151400
DATA 060020151200
DATA 060020151200
DATA 06000112011501120115011201151415011201151000
DATA 06000115011201150112011501121415011201151000
DATA 0600011201150112011501120115141501150112011501120800
DATA 0600011501120115011201150112141501120115011201150800
DATA 06000112011501120115011201151615011501120800
DATA 06000115011201150112011501121615011201150800
DATA 06000112011501120115011201151615011501120800
DATA 06000115011201150112011501121615011201150800
DATA 06000112011501120115011201151615011501120800
DATA 06000115011201150112011501121615011201150800
DATA 06000112011501150112011501151615011501120800
DATA 060001150112011501120115011201150112080104080207011201150800
DATA 060001120115011201150112011501120115080104080207011501120800
DATA 100001150112011501121409011201150800
DATA 100001120115011201151409011501120800
DATA 100001150112011501120115011212090112011501120700
DATA 100001120115011201150112011512090115011201150700
DATA 10000409011501120115011210091000
DATA 10000409011201150112011510091000
DATA 10000809040006091000
DATA 10000809040006091000
DATA 10000809040006091000
DATA 10000809040006091000
DATA 10000809040006091000
DATA 10000809040006091000
DATA 10000809040006091000
DATA 10000809040006091000
DATA 10000809040006091000
DATA 10000809040006091000
DATA 10000809040006091000
DATA 10000809040006091000
DATA 10000809040006091000
DATA 10000809040006091000
DATA 100008090607040904070600
DATA 100008090607040904070600
DATA 100004091007020906070600
DATA 100004091007020906070600

'----------------------RIGHT HAND FORWARD
DATA 3800
DATA 3800
DATA 3800
DATA 060020041200
DATA 060020041200
DATA 060020041200
DATA 060020041200
DATA 06003204
DATA 06003204
DATA 06003204
DATA 0600100601150112011501120401011501121200
DATA 0600100601120115011201150401011201151200
DATA 0600100601150112011501120401011501121200
DATA 0600100601120115011201150401011201151200
DATA 060004060115011201150112020601150112011501120115011201150112011501121200
DATA 060004060112011501120115020601120115011201150112011501120115011201151200
DATA 060004060115011201150112020601150112011501120115011201150112011501121200
DATA 060004060112011501120115020601120115011201150112011501120115011201151200
DATA 10000115011201150112020601150112011501120115011201150112011501120115011201150112011501120600
DATA 10000112011501120115020601120115011201150112011501120115011201150112011501120115011201150600
DATA 1000011501120115011201150112011501120115011201150112011501121400
DATA 1000011201150112011501120115011201150112011501120115011201151400
DATA 1000011501120115011201150112011501120115011201150112011501121400
DATA 1000011201150112011501120115011201150112011501120115011201151400
DATA 1000011501120115011201150112011501120115011201150112011501121400
DATA 1000011201150112011501120115011201150112011501120115011201151400
DATA 120010151600
DATA 120010151600
DATA 120010151600
DATA 120010151600
DATA 060018151400
DATA 060018151400
DATA 060020151200
DATA 060020151200

DATA 060020151200
DATA 060020151200
DATA 060001120115011201150112011514151200
DATA 060001150112011501120115011214151200
DATA 06000112011501120115011201150112011512151200
DATA 06000115011201150112011501120115011212151200
DATA 08000112011501120115011201150112011510151200
DATA 08000115011201150112011501120115011210151200

DATA 0800011201150215011201150112011510151200
DATA 0800011501120215011501120115011210151200
DATA 0600011201150115011202070112011501120115011201150407020002071200
DATA 0600011501120115011502070115011201150112011501120407020002071200
DATA 040001150112011501150200040901120115011201150112011506091200
DATA 040001120115011201120200040901150112011501120115011206091200
DATA 0200011201150112011504000809011201150112011504091200
DATA 0200011501120115011204000809011501120115011204091200
DATA 10001009011201150112011502091200
DATA 10001009011501120115011202091200
DATA 080020091000
DATA 080020091000
DATA 06001009020010091000
DATA 06001009020010091000
DATA 06000809060008091000
DATA 06000809060008091000
DATA 040010090800080906000207
DATA 040010090800080906000207
DATA 0400080910000809040002070200
DATA 0400080910000809040002070200
DATA 060704091400080902070400
DATA 060704091400080902070400
DATA 0400020704091400060902070600
DATA 0400020704091400060902070600
DATA 06000807120004070800
DATA 06000807120004070800

'---------------------LEFT HAND FORWARD
DATA 3800
DATA 3800
DATA 3800
DATA 060020041200
DATA 060020041200
DATA 060020041200
DATA 060020041200
DATA 06003204
DATA 06003204
DATA 06003204
DATA 0600100601150112011501120401011501121200
DATA 0600100601120115011201150401011201151200
DATA 0600100601150112011501120401011501121200
DATA 0600100601120115011201150401011201151200
DATA 060004060115011201150112020601150112011501120115011201150112011501121200
DATA 060004060112011501120115020601120115011201150112011501120115011201151200
DATA 060004060115011201150112020601150112011501120115011201150112011501121200
DATA 060004060112011501120115020601120115011201150112011501120115011201151200
DATA 10000115011201150112020601150112011501120115011201150112011501120115011201150112011501120600
DATA 10000112011501120115020601120115011201150112011501120115011201150112011501120115011201150600
DATA 1000011501120115011201150112011501120115011201150112011501121400
DATA 1000011201150112011501120115011201150112011501120115011201151400
DATA 1000011501120115011201150112011501120115011201150112011501121400
DATA 1000011201150112011501120115011201150112011501120115011201151400
DATA 1000011501120115011201150112011501120115011201150112011501121400
DATA 1000011201150112011501120115011201150112011501120115011201151400
DATA 120010151600
DATA 120010151600
DATA 120010151600
DATA 120010151600
DATA 060018151400
DATA 060018151400
DATA 060020151200
DATA 060020151200

DATA 060020151200
DATA 060020151200

DATA 06000112011501120115011201151415011201151000
DATA 06000115011201150112011501121415011501121000
DATA 04000112011501120115011201151815011201150800
DATA 04000115011201150112011501121815011501120800
DATA 04000112011501120115020016150200011201150800
DATA 04000115011201150112020016150200011501120800
DATA 0400011201150112011502001615040001120115011201150400
DATA 0400011501120115011202001615040001150112011501120400
DATA 020001120115011201150400120702000207060001120115011201150200
DATA 020001150112011501120400120702000207060001150112011501120200
DATA 0112011501120115060016091200
DATA 0115011201150112060016091200
DATA 100016091200
DATA 100016091200
DATA 100016091200
DATA 100016091200
DATA 080020091000
DATA 080020091000
DATA 06001009020010091000
DATA 06001009020010091000
DATA 06000809060008091000
DATA 06000809060008091000
DATA 040010090800080906000207
DATA 040010090800080906000207
DATA 0400080910000809040002070200
DATA 0400080910000809040002070200
DATA 0200040704091400080902070400
DATA 0200040704091400080902070400
DATA 0400020704091400060902070600
DATA 0400020704091400060902070600
DATA 06000807120004070800
DATA 06000807120004070800
'---------------------------JUMPING
DATA 3800
DATA 060020041200
DATA 060020041200
DATA 060020041200
DATA 060020041200
DATA 06003204
DATA 06003204
DATA 06003204
DATA 0600100601150112011501120401011501121200
DATA 0600100601120115011201150401011201151200
DATA 0600100601150112011501120401011501121200
DATA 0600100601120115011201150401011201151200
DATA 060004060115011201150112020601150112011501120115011201150112011501121200
DATA 060004060112011501120115020601120115011201150112011501120115011201151200
DATA 060004060115011201150112020601150112011501120115011201150112011501121200
DATA 060004060112011501120115020601120115011201150112011501120115011201151200
DATA 10000115011201150112020601150112011501120115011201150112011501120115011201150112011501120600
DATA 10000112011501120115020601120115011201150112011501120115011201150112011501120115011201150600
DATA 1000011501120115011201150112011501120115011201150112011501121400
DATA 1000011201150112011501120115011201150112011501120115011201151400
DATA 1000011501120115011201150112011501120115011201150112011501121400
DATA 1000011201150112011501120115011201150112011501120115011201151400
DATA 1000011501120115011201150112011501120115011201150112011501121400
DATA 1000011201150112011501120115011201150112011501120115011201151400
DATA 120010151600
DATA 120010151600
DATA 120010151600
DATA 120010151600
DATA 060018151400
DATA 060018151400
DATA 060020151200
DATA 060020151200

DATA 06002015011201151000
DATA 06002015011501121000
DATA 06000112011501120115011201151415011501121000
DATA 06000115011201150112011501121415011201151000
DATA 04000112011501120115011201151615011201150112011504000112011501120115
DATA 04000115011201150112011501121615011501120115011204000115011201150112
DATA 0400011201150112011502001615011201150112011501000112011501120115011201120115
DATA 0400011501120115011202001615011501120115011201000115011201150112011501150115
DATA 040001120115011201150200161502000112011501120115011201150400
DATA 040001150112011501120200161502000115011201150112011501120400
DATA 0200011201150112011504001207020002070400011201150600
DATA 0200011501120115011204001207020002070400011501120600
DATA 0112011501120115060022090600
DATA 0115011201150112060022090600
DATA 100024090400
DATA 100024090400
DATA 100024090400
DATA 100024090400
DATA 120022090400
DATA 120022090400
DATA 02071809060008090400
DATA 02071809060008090400
DATA 02071809060008090400
DATA 02071809060008090400
DATA 02071609080008090400
DATA 02071609080008090400
DATA 04071209100008090400
DATA 04071209100008090400
DATA 04072200040704090400
DATA 04072200040704090400
DATA 040726000807
DATA 040726000807
DATA 3800,3800,3800,3800
'----------------------------------------VIRUS
DATA 3800,3800,3800,3800,3800,3800,3800,3800,3800
DATA 3800,3800,3800,3800,3800,3800
DATA 190001121800
DATA 18000112010001121700
DATA 17000112030001121600
DATA 16000112050001121500
DATA 15000112070001121400
DATA 15000112070001121400
DATA 15000112070001121400
DATA 15000112070001121400
DATA 15000112070001121400
DATA 15000112070001121400
DATA 15000112070001121400
DATA 15000112070001121400
DATA 15000112070001121400
DATA 15000112070001121400
DATA 15000112070001121400
DATA 16000112050001121500
DATA 17000112030001121600
DATA 18000112010001121700
DATA 18000112010001121700
DATA 18000112010001121700
DATA 170005051600
DATA 170005141600
DATA 170005051600
DATA 170005141600
DATA 170005051600
DATA 170005141600
DATA 170005051600
DATA 18000112010001121700
DATA 18000112010001121700
DATA 18000112010001121700
DATA 18000112010001121700
DATA 18000112010001121700
DATA 18000112010001121700
DATA 140001100300011201000112030001101300
DATA 130002100300011201000112030002101200
DATA 130002100300011201000112030002101200
DATA 120004100200011201000112020004101100
DATA 1100021002000110020001120100011202000110020002101000
DATA 1000021003000110020001120100011202000110030001101000
DATA 1000011004000210010001120100011201000210030001101000
DATA 090002100400011007050110030002100900
DATA 080002100500011007050110040002100800
DATA 070001100112011018000110011201100700
DATA 070001100112011018000110011201100700
DATA 060001100212011018000110021201100600
DATA 050001100212011020000110021201100500
DATA 040001100212011022000110021201100400
DATA 040001100112011024000110011201100400
DATA 030001100112011026000110011201100300
DATA 020001100112011028000110011201100200
DATA 02000210300002100200
DATA 01000210320002100100
DATA 01000110340001100100
DATA 011036000110
'-------------------------------------------------------------------
'------------LEVEL DATA---------------------------------------------
'-------------------------------------------------------------------
DATA 100020000000000000001010000000000000000000001000000000000000000000100000000000000000000010000000000000000000001000000000000000000011
DATA 100010000000000000001010100000000000000000001010000000000000000000101000000000000000000010100000000000000000001010000000000000000011
DATA 100030000000001100000000010000000000000000001001000000000000000000100100000000000000000010010000000000000000001001000100000000000010
DATA 100000000000110000000000000000000000000000000000100000000000000000100010000000000000000010001010000000000000001000101000000000000010
DATA 100000000000011100000000000000000000000000000000000000000000000000000001000000000000000010000100000000000000001000010000000000000010
DATA 100000000000000000000000000000000000000000000000000000000000000010000000000000000000001000000000000000000000101000000000000000000010
DATA 100000000000001000111000000000000000000000000000000000000000000010000000000000000000001000000000000000000000100000000000000000000010
DATA 200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010
DATA 200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010
DATA 200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010
DATA 100020000000011111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010
DATA 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110


10000 '---DIMENSION CHECK   '***REMOVE THIS DIMENSION CHECK & THE CHR$(9) FROM THE WHILE WEND LOOP HIGH ABOVE
R = 400: C = 400: NR = 0: NC = 0
10001
WHILE X$ <> CHR$(27)
 Y$ = INKEY$
  IF Y$ = CHR$(0) + CHR$(77) THEN NC = NC + 1: GOTO 10002'PRINT "RIGHT"
  IF Y$ = CHR$(0) + CHR$(75) THEN NC = NC - 1: GOTO 10002'PRINT "LEFT"
  IF Y$ = CHR$(0) + CHR$(72) THEN NR = NR - 1: GOTO 10002'PRINT "UP"
  IF Y$ = CHR$(0) + CHR$(80) THEN NR = NR + 1: GOTO 10002'PRINT "DOWN"
  IF Y$ = CHR$(27) THEN RETURN
  IF Y$ = "+" THEN ASS = ASS + 1
  IF Y$ = "-" THEN ASS = ASS - 1
WEND
10002
PSET (NC, NR), ASS
PSET (C, R), ASS
LOCATE 1, 1: PRINT NC, NR, ASS
C = NC: R = NR: GOTO 10001

